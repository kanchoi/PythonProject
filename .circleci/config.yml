version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.0

executors:
  python-executor:
    docker:
      - image: cimg/python:3.11
      - image: postgres:13
        environment:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb

jobs:
  test:
    executor: python-executor
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - run:
          name: Run tests
          command: |
            pytest --junitxml=test-results/results.xml
      - store_test_results:
          path: test-results

  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup
      - run:
          name: Build and push Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
              REPO=myapp
              aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com
              docker build -t $REPO:${CIRCLE_SHA1} .
              docker tag $REPO:${CIRCLE_SHA1} $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO:${CIRCLE_SHA1}
              docker push $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO:${CIRCLE_SHA1}
            else
              echo "Skipping ECR push for branch ${CIRCLE_BRANCH}"
            fi

workflows:
  version: 2
  pipeline:
    jobs:
      - test
      - build:
          requires:
            - test
