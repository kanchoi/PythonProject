version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1.0

executors:
  python-executor:
    docker:
      - image: cimg/python:3.10
      - image: postgres:13  # sidecar DB
        environment:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: testdb

jobs:
  build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
            docker_layer_caching: true
      - aws-cli/setup:
          role_arn: arn:aws:iam::$AWS_IAM:role/CIRCLE_OPENID
          profile_name: default
      - run:
          name: Check S3 Credentials
          command: aws s3 ls --region $AWS_REGION
      - run:
          name: Build Docker image
          command: docker build -t myapp:${CIRCLE_SHA1} .
      - aws-ecr/ecr-login
      - run:
          name: Push Docker image (main branch only)
          command: |
            if [ "${CIRCLE_BRANCH}" == "main" ]; then
              docker tag myapp:${CIRCLE_SHA1} $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myapp:${CIRCLE_SHA1}
              docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myapp:${CIRCLE_SHA1}
            else
              echo "Skipping Docker push for branch ${CIRCLE_BRANCH}"
            fi

  test:
    executor: python-executor
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-pip-{{ checksum "requirements.txt" }}
            - v1-pip-
      - run:
          name: Install dependencies
          command: pip install -r requirements.txt
      - save_cache:
          paths:
            - ~/.cache/pip
          key: v1-pip-{{ checksum "requirements.txt" }}
      - run:
          name: Wait for Postgres
          command: |
            for i in {1..30}; do
              nc -z localhost 5432 && echo "Postgres is up" && exit 0
              sleep 1
            done
            echo "Postgres did not start in time" && exit 1
      - run:
          name: Run tests
          command: pytest --junitxml=test-results/results.xml
      - store_test_results:
          path: test-results
      - aws-cli/setup:
          role_arn: arn:aws:iam::$AWS_IAM:role/CIRCLE_OPENID
          profile_name: default
      - run:
          name: Deploy to S3
          command: aws s3 sync test-results/ s3://circleci-demo-personal


  deploy:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker
      - aws-cli/setup
      - run:
          name: Deploy Docker image (main branch only)
          command: |
            docker pull $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myapp:${CIRCLE_SHA1}
            docker tag $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myapp:${CIRCLE_SHA1} $ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$REPO:latest
            docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/myapp:latest


workflows:
  version: 2
  ci_pipeline:
    jobs:
      - build
      - test:
          requires:
            - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: main
